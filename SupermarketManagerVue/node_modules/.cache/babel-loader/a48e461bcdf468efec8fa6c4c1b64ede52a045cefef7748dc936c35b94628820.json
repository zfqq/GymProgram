{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { loginEmp, removeToken } from \"@/assets/js/auth\";\nimport Cookies from 'js-cookie';\nimport { ajaxPost, popup } from \"@/assets/js/common\";\nexport default {\n  data() {\n    return {\n      pwdForm: {},\n      rules: {\n        newPwd: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 8,\n          message: '新密码长度为6-8位',\n          trigger: 'blur'\n        }],\n        oldPwd: [{\n          required: true,\n          message: '旧密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 8,\n          message: '旧密码长度为6-8位',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    init() {\n      this.pwdForm.username = loginEmp().username;\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$confirm('确定修改密码?', '警示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            ajaxPost(\"/personal/edit_pwd\", this.pwdForm).then(res => {\n              res = res.data;\n              if (res.code == 200) {\n                popup(\"密码修改成功,请重新登录...\");\n                this.pwdForm = {\n                  username: this.pwdForm.username\n                };\n                Cookies.remove(\"employee\");\n                removeToken();\n                this.$router.push('/');\n              } else {\n                popup(res.msg, \"error\");\n              }\n            });\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消操作'\n            });\n          });\n        }\n      });\n    }\n  },\n  created() {\n    this.init();\n  }\n};","map":{"version":3,"names":["loginEmp","removeToken","Cookies","ajaxPost","popup","data","pwdForm","rules","newPwd","required","message","trigger","min","max","oldPwd","methods","init","username","resetForm","formName","$refs","resetFields","submitForm","validate","valid","$confirm","confirmButtonText","cancelButtonText","type","then","res","code","remove","$router","push","msg","catch","$message","created"],"sources":["src/views/personal/Edit_pwd.vue"],"sourcesContent":["<template>\n    <div id=\"edit_pwd\">\n        <el-form :model=\"pwdForm\" :rules=\"rules\" ref=\"pwdForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            <h3>个人密码修改</h3>\n            <el-form-item label=\"账号\">\n                <el-input disabled v-model=\"pwdForm.username\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"旧密码\" prop=\"oldPwd\">\n                <el-input type=\"password\" v-model=\"pwdForm.oldPwd\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"新密码\" prop=\"newPwd\">\n                <el-input type=\"password\" v-model=\"pwdForm.newPwd\"></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('pwdForm')\">确定</el-button>\n                <el-button @click=\"resetForm('pwdForm')\">重置</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n<script>\n\n    import {loginEmp, removeToken} from \"@/assets/js/auth\";\n    import Cookies from 'js-cookie'\n    import {ajaxPost, popup} from \"@/assets/js/common\";\n\n    export default {\n        data() {\n            return {\n                pwdForm: {},\n                rules: {\n                    newPwd: [\n                        {required: true, message: '新密码不能为空', trigger: 'blur'},\n                        {min: 6, max: 8, message: '新密码长度为6-8位', trigger: 'blur'}\n                    ],\n                    oldPwd: [\n                        {required: true, message: '旧密码不能为空', trigger: 'blur'},\n                        {min: 6, max: 8, message: '旧密码长度为6-8位', trigger: 'blur'}\n                    ],\n                }\n            }\n        },\n        methods: {\n            init() {\n                this.pwdForm.username = loginEmp().username\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            },\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确定修改密码?', '警示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        }).then(() => {\n                            ajaxPost(\"/personal/edit_pwd\", this.pwdForm).then(res => {\n                                res = res.data\n                                if (res.code == 200) {\n                                    popup(\"密码修改成功,请重新登录...\")\n                                    this.pwdForm = {username: this.pwdForm.username}\n                                    Cookies.remove(\"employee\")\n                                    removeToken()\n                                    this.$router.push('/')\n                                } else {\n                                    popup(res.msg, \"error\")\n                                }\n                            })\n                        }).catch(() => {\n                            this.$message({\n                                type: 'info',\n                                message: '已取消操作'\n                            });\n                        });\n\n                    }\n                });\n            },\n\n        },\n        created() {\n            this.init()\n        }\n    }\n</script>\n<style>\n    #edit_pwd {\n        width: 50%;\n        margin: 50px auto;\n        background-color: #ffffff;\n        padding: 20px;\n\n    }\n</style>"],"mappings":";AAsBA,SAAAA,QAAA,EAAAC,WAAA;AACA,OAAAC,OAAA;AACA,SAAAC,QAAA,EAAAC,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;QACAC,MAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,MAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,OAAA;IACAC,KAAA;MACA,KAAAV,OAAA,CAAAW,QAAA,GAAAjB,QAAA,GAAAiB,QAAA;IACA;IACAC,UAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,WAAA;IACA;IACAC,WAAAH,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAI,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,iBAAA;YACAC,gBAAA;YACAC,IAAA;UACA,GAAAC,IAAA;YACA1B,QAAA,4BAAAG,OAAA,EAAAuB,IAAA,CAAAC,GAAA;cACAA,GAAA,GAAAA,GAAA,CAAAzB,IAAA;cACA,IAAAyB,GAAA,CAAAC,IAAA;gBACA3B,KAAA;gBACA,KAAAE,OAAA;kBAAAW,QAAA,OAAAX,OAAA,CAAAW;gBAAA;gBACAf,OAAA,CAAA8B,MAAA;gBACA/B,WAAA;gBACA,KAAAgC,OAAA,CAAAC,IAAA;cACA;gBACA9B,KAAA,CAAA0B,GAAA,CAAAK,GAAA;cACA;YACA;UACA,GAAAC,KAAA;YACA,KAAAC,QAAA;cACAT,IAAA;cACAlB,OAAA;YACA;UACA;QAEA;MACA;IACA;EAEA;EACA4B,QAAA;IACA,KAAAtB,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}